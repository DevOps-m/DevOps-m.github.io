<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>流转千回</title>
  
  <subtitle>技术成长之路</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://devops-m.github.io/"/>
  <updated>2019-09-25T03:54:15.819Z</updated>
  <id>https://devops-m.github.io/</id>
  
  <author>
    <name>李志强</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于Hexo+GitHub构建个人Blog</title>
    <link href="https://devops-m.github.io/2019/09/25/ji-yu-hexo-github-gou-jian-ge-ren-blog/"/>
    <id>https://devops-m.github.io/2019/09/25/ji-yu-hexo-github-gou-jian-ge-ren-blog/</id>
    <published>2019-09-25T03:45:12.000Z</published>
    <updated>2019-09-25T03:54:15.819Z</updated>
    
    <content type="html"><![CDATA[<h3 id="快速部署："><a href="#快速部署：" class="headerlink" title="快速部署："></a>快速部署：</h3><h4 id="目录结构说明："><a href="#目录结构说明：" class="headerlink" title="目录结构说明："></a>目录结构说明：</h4><ul><li>“_config.yml”主要用于修改个人信息。</li></ul><h3 id="部署过程："><a href="#部署过程：" class="headerlink" title="部署过程："></a>部署过程：</h3><blockquote><p>参考文献：<a href="https://godweiyang.com/2018/04/13/hexo-blog/" target="_blank" rel="noopener">https://godweiyang.com/2018/04/13/hexo-blog/</a></p></blockquote><h4 id="1-安装Git："><a href="#1-安装Git：" class="headerlink" title="1. 安装Git："></a>1. 安装Git：</h4><ul><li>下载地址：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></li><li>安装环境检测：在Windows运行窗口输入”git –version”，如果有版本号信息输出，则表示安装成功。</li></ul><h4 id="2-安装Node-js："><a href="#2-安装Node-js：" class="headerlink" title="2. 安装Node.js："></a>2. 安装Node.js：</h4><ul><li>下载地址：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a></li><li>安装环境检测：在Windows运行窗口输入”node -v”和”npm -v”，如果有版本号信息输出，则表示安装成功。</li></ul><h4 id="3-配置国内镜像源（这里使用淘宝源）："><a href="#3-配置国内镜像源（这里使用淘宝源）：" class="headerlink" title="3. 配置国内镜像源（这里使用淘宝源）："></a>3. 配置国内镜像源（这里使用淘宝源）：</h4><pre><code>npm config set registry https://registry.npm.taobao.org</code></pre><blockquote><p>PS：鼠标右击，选择”Git Bash Here”，在Git Bash运行上述命令即可。</p></blockquote><h4 id="4-注册GitHub账号："><a href="#4-注册GitHub账号：" class="headerlink" title="4. 注册GitHub账号："></a>4. 注册GitHub账号：</h4><ul><li>注册GitHub账号用于存放Blog站点，以及发布代码。<a href="https://github.com" target="_blank" rel="noopener">GitHub地址</a></li><li>创建项目，输入以自己GitHub名字命名的项目，后面一定要加”.github.io” 后缀，”README”初始化也一定要勾上，否则拉取仓库会有问题。</li></ul><blockquote><p>PS：项目名字一定要和你GitHub名字完全一样，比如：你的GitHub名字叫”hello” ，那么仓库的名字一定要是”hello.github.io”。</p></blockquote><ul><li>此时项目已建成，接着点”Settings”，向下翻找到”GitHub Pages”，点击”Choose a theme”选择一个主题，然后等待一会，再回到”GitHub Pages”界面然后默认主题页面就会出来。</li></ul><h4 id="5-设置GitHub-Key："><a href="#5-设置GitHub-Key：" class="headerlink" title="5. 设置GitHub Key："></a>5. 设置GitHub Key：</h4><ul><li><p>用于免密拉取项目代码。</p></li><li><p>创建SSH Key，将”id_rsa.pub”里的内容放入GitHub SSH KEY界面：</p><pre><code>ssh-keygen -t rsa -P &quot;&quot; -f ~/.ssh/id_rsa -C &quot;1005437573@qq.com&quot;</code></pre></li><li><p>设置Git Config个人信息：</p><pre><code>git config --global user.name &quot;李志强&quot;git config --global user.email &quot;1005437573@qq.com&quot;</code></pre></li></ul><blockquote><p>PS：鼠标右击，选择”Git Bash Here”，在Git Bash运行上述命令即可。</p></blockquote><h4 id="6-Hexo玩法："><a href="#6-Hexo玩法：" class="headerlink" title="6. Hexo玩法："></a>6. Hexo玩法：</h4><ul><li>默认Hexo玩法：</li></ul><pre><code>// 在Windows系统上在合适的地方存放自己的博客文件，比如：D:\myblog。// 切换到D:\myblog目录下，进入Git Bash窗口进行操作，操作如下：npm i hexo-cli -g   // 安装hexo-cli；hexo -v             // 验证hexo-cli的安装；hexo init           // 初始化博客目录结构；npm install         // 安装npm依赖库；hexo generate       // 生成站点静态资源，可用&quot;hexo g&quot;简写；hexo server         // 本地启动服务，默认4000端口，可用&quot;hexo s&quot;简写；</code></pre><blockquote><p>PS：剩余内容就是更换主题，更适合自己，但是官方上的主题，Bug不少，用起来不太舒服，官方主题地址：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p></blockquote><ul><li>拉现成代码进行修改快速部署，操作如下：</li></ul><pre><code>// 拉取代码：git clone git@github.com:DevOps-m/hexo-matery-modified.git myblog// 参考这默认设置，进行修改_config.yml文件内容，重点关注一下内容配置（将文章发布到GitHub设置），以为我的为例所示：hexo根目录下的_config.yml地址：https://github.com/DevOps-m/hexo-matery-modified/blob/master/_config.ymldeploy:- type: git                                                     // 使用发布类型；  repository: git@github.com:DevOps-m/DevOps-m.github.io.git    // 部署代码仓库；  branch: master                                                // 部署分支；// 博客界面上的设置，还需要修改主题的_config.yml文件内容，可参考默认的_config.yml设置，根据自己需要进行按需修改：主题_config.yml地址：https://github.com/DevOps-m/hexo-matery-modified/blob/master/themes/matery/_config.yml</code></pre><h4 id="7-Hexo写文章，发布文章，以及发布博客相关修改操作："><a href="#7-Hexo写文章，发布文章，以及发布博客相关修改操作：" class="headerlink" title="7. Hexo写文章，发布文章，以及发布博客相关修改操作："></a>7. Hexo写文章，发布文章，以及发布博客相关修改操作：</h4><pre><code>// 安装hexo扩展包：npm i hexo-deployer-git// 新建文章：hexo new post &quot;文章标题&quot;    // myblog\source\_posts目录下会多出一个文文件夹和一个以.md结尾的文件，一个用来存放图片数据，一个就是新建的文章文件；// 编写文章：只需要修改.md结尾的文件内容即可。// 发布文章及本地预览：hexo g      // 生成站点静态页面；hexo s      // 本地启动服务预览；hexo d      // 根据在_config.yml配置的GitHub仓库地址进行发布到对应的仓库；</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;快速部署：&quot;&gt;&lt;a href=&quot;#快速部署：&quot; class=&quot;headerlink&quot; title=&quot;快速部署：&quot;&gt;&lt;/a&gt;快速部署：&lt;/h3&gt;&lt;h4 id=&quot;目录结构说明：&quot;&gt;&lt;a href=&quot;#目录结构说明：&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="Linux" scheme="https://devops-m.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://devops-m.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>使用autofs自动挂载NFS网络文件系统</title>
    <link href="https://devops-m.github.io/2019/09/23/shi-yong-autofs-zi-dong-gua-zai-nfs-wang-luo-wen-jian-xi-tong/"/>
    <id>https://devops-m.github.io/2019/09/23/shi-yong-autofs-zi-dong-gua-zai-nfs-wang-luo-wen-jian-xi-tong/</id>
    <published>2019-09-23T07:13:00.000Z</published>
    <updated>2019-09-24T06:26:32.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="系统信息："><a href="#系统信息：" class="headerlink" title="系统信息："></a>系统信息：</h3><table><thead><tr><th>系统版本</th><th>内核版本</th><th>NFS版本</th></tr></thead><tbody><tr><td>CentOS Linux release 7.6.1810 (Core)</td><td>3.10.0-957.el7.x86_64</td><td>1.3.0</td></tr></tbody></table><blockquote><p>PS：这里不介绍部署NFS网络共享文件系统内容。</p></blockquote><h3 id="部署过程："><a href="#部署过程：" class="headerlink" title="部署过程："></a>部署过程：</h3><blockquote><p>参考文献：<a href="https://blog.csdn.net/qq_20327293/article/details/51568077" target="_blank" rel="noopener">https://blog.csdn.net/qq_20327293/article/details/51568077</a></p></blockquote><h4 id="1-安装autofs软件："><a href="#1-安装autofs软件：" class="headerlink" title="1. 安装autofs软件："></a>1. 安装autofs软件：</h4><pre><code>root@linux:~# yum install -y autofs</code></pre><h4 id="2-添加配置，在-etc-auto-master内增加内容："><a href="#2-添加配置，在-etc-auto-master内增加内容：" class="headerlink" title="2. 添加配置，在/etc/auto.master内增加内容："></a>2. 添加配置，在/etc/auto.master内增加内容：</h4><pre><code>root@linux:~# echo &quot;/mnt /etc/auto.nfs&quot; &gt;&gt; /etc/auto.master</code></pre><blockquote><p>PS：”/mnt”为挂载点一级目录，”/etc/auto.nfs”为引用这文件，具体设置根据环境来定，其中如果想要挂载点为”/mnt”，那么这里就需要设置为”/“，二级挂载点设置为”mnt”，合起来就是”/mnt”，但是这种方式会有失败。</p></blockquote><h4 id="3-创建-etc-auto-nfs："><a href="#3-创建-etc-auto-nfs：" class="headerlink" title="3. 创建/etc/auto.nfs："></a>3. 创建/etc/auto.nfs：</h4><pre><code>root@linux:~# echo &quot;renderdata -fstype=nfs,vers=4,minorversion=0,noatime,nodiratime,nosuid,noexec,nodev,ro,bg,soft,_netdev nfs.linux.com:/data/renderdata&quot; &gt; /etc/auto.nfs</code></pre><blockquote><p>PS：”renderdata”为挂载点二级目录，也就是实际挂载点目录为”/mnt/renderdata”，其中二级挂载点目录不需要在系统上存在，访问挂载点的时候会自动创建，后面的选项则分别为挂载参数和NFS服务端共享地址。</p></blockquote><h4 id="4-将autofs服务设置开机自启并启动："><a href="#4-将autofs服务设置开机自启并启动：" class="headerlink" title="4. 将autofs服务设置开机自启并启动："></a>4. 将autofs服务设置开机自启并启动：</h4><pre><code>root@linux:~# systemctl enable autofs.serviceroot@linux:~# systemctl start autofs.serviceroot@linux:~# systemctl status autofs.service</code></pre><h4 id="5-测试autofs部署情况："><a href="#5-测试autofs部署情况：" class="headerlink" title="5. 测试autofs部署情况："></a>5. 测试autofs部署情况：</h4><pre><code>ops@linux:~$ df -hFilesystem                          Size  Used Avail Use% Mounted on/dev/mapper/vg01-root               200G  4.0G  196G   2% /devtmpfs                             63G     0   63G   0% /devtmpfs                                63G     0   63G   0% /dev/shmtmpfs                                63G   11M   63G   1% /runtmpfs                                63G     0   63G   0% /sys/fs/cgroup/dev/sda2                           497M  132M  365M  27% /boot/dev/sda1                           500M   12M  489M   3% /boot/efi/dev/mapper/vg01-data               3.1T   38M  3.1T   1% /datatmpfs                                13G     0   13G   0% /run/user/1000ops@linux:~$</code></pre><pre><code>ops@linux:~$ tree -L 1 /mnt//mnt/0 directories, 0 filesops@linux:~$ ops@linux:~$ ls /mnt/renderdataexportgeometry  modelvrscene  renderingvrscene  scriptsops@linux:~$ ops@linux:~$ tree -L 1 /mnt//mnt/└── renderdata1 directory, 0 filesops@linux:~$ </code></pre><pre><code>ops@linux:~$ df -hFilesystem                          Size  Used Avail Use% Mounted on/dev/mapper/vg01-root               200G  4.0G  196G   2% /devtmpfs                             63G     0   63G   0% /devtmpfs                                63G     0   63G   0% /dev/shmtmpfs                                63G   11M   63G   1% /runtmpfs                                63G     0   63G   0% /sys/fs/cgroup/dev/sda2                           497M  132M  365M  27% /boot/dev/sda1                           500M   12M  489M   3% /boot/efi/dev/mapper/vg01-data               3.1T   38M  3.1T   1% /datatmpfs                                13G     0   13G   0% /run/user/1000nfs.linux.com:/data/renderdata      4.0T  1.2T  2.9T  29% /mnt/renderdataops@linux:~$</code></pre><blockquote><p>PS：可以看到测试过程如上所示。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;系统信息：&quot;&gt;&lt;a href=&quot;#系统信息：&quot; class=&quot;headerlink&quot; title=&quot;系统信息：&quot;&gt;&lt;/a&gt;系统信息：&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;系统版本&lt;/th&gt;
&lt;th&gt;内核版本&lt;/th&gt;
&lt;th&gt;NFS版本&lt;/t
      
    
    </summary>
    
      <category term="Linux" scheme="https://devops-m.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://devops-m.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
